/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardReportsRouteImport } from './routes/dashboard/reports'
import { Route as DashboardMotorValuationRouteImport } from './routes/dashboard/motor-valuation'
import { Route as DashboardMotorAssessmentRouteImport } from './routes/dashboard/motor-assessment'
import { Route as DashboardAnalyticsRouteImport } from './routes/dashboard/analytics'
import { Route as DashboardAiDataInquiriesRouteImport } from './routes/dashboard/ai-data-inquiries'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardReportsRoute = DashboardReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMotorValuationRoute = DashboardMotorValuationRouteImport.update({
  id: '/motor-valuation',
  path: '/motor-valuation',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMotorAssessmentRoute =
  DashboardMotorAssessmentRouteImport.update({
    id: '/motor-assessment',
    path: '/motor-assessment',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAiDataInquiriesRoute =
  DashboardAiDataInquiriesRouteImport.update({
    id: '/ai-data-inquiries',
    path: '/ai-data-inquiries',
    getParentRoute: () => DashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/dashboard/ai-data-inquiries': typeof DashboardAiDataInquiriesRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/motor-assessment': typeof DashboardMotorAssessmentRoute
  '/dashboard/motor-valuation': typeof DashboardMotorValuationRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/dashboard/ai-data-inquiries': typeof DashboardAiDataInquiriesRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/motor-assessment': typeof DashboardMotorAssessmentRoute
  '/dashboard/motor-valuation': typeof DashboardMotorValuationRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/pricing': typeof PricingRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/dashboard/ai-data-inquiries': typeof DashboardAiDataInquiriesRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/motor-assessment': typeof DashboardMotorAssessmentRoute
  '/dashboard/motor-valuation': typeof DashboardMotorValuationRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contact'
    | '/dashboard'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/dashboard/ai-data-inquiries'
    | '/dashboard/analytics'
    | '/dashboard/motor-assessment'
    | '/dashboard/motor-valuation'
    | '/dashboard/reports'
    | '/dashboard/settings'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contact'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/dashboard/ai-data-inquiries'
    | '/dashboard/analytics'
    | '/dashboard/motor-assessment'
    | '/dashboard/motor-valuation'
    | '/dashboard/reports'
    | '/dashboard/settings'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/contact'
    | '/dashboard'
    | '/pricing'
    | '/signin'
    | '/signup'
    | '/dashboard/ai-data-inquiries'
    | '/dashboard/analytics'
    | '/dashboard/motor-assessment'
    | '/dashboard/motor-valuation'
    | '/dashboard/reports'
    | '/dashboard/settings'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactRoute: typeof ContactRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  PricingRoute: typeof PricingRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/reports': {
      id: '/dashboard/reports'
      path: '/reports'
      fullPath: '/dashboard/reports'
      preLoaderRoute: typeof DashboardReportsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/motor-valuation': {
      id: '/dashboard/motor-valuation'
      path: '/motor-valuation'
      fullPath: '/dashboard/motor-valuation'
      preLoaderRoute: typeof DashboardMotorValuationRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/motor-assessment': {
      id: '/dashboard/motor-assessment'
      path: '/motor-assessment'
      fullPath: '/dashboard/motor-assessment'
      preLoaderRoute: typeof DashboardMotorAssessmentRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/ai-data-inquiries': {
      id: '/dashboard/ai-data-inquiries'
      path: '/ai-data-inquiries'
      fullPath: '/dashboard/ai-data-inquiries'
      preLoaderRoute: typeof DashboardAiDataInquiriesRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardAiDataInquiriesRoute: typeof DashboardAiDataInquiriesRoute
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardMotorAssessmentRoute: typeof DashboardMotorAssessmentRoute
  DashboardMotorValuationRoute: typeof DashboardMotorValuationRoute
  DashboardReportsRoute: typeof DashboardReportsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAiDataInquiriesRoute: DashboardAiDataInquiriesRoute,
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardMotorAssessmentRoute: DashboardMotorAssessmentRoute,
  DashboardMotorValuationRoute: DashboardMotorValuationRoute,
  DashboardReportsRoute: DashboardReportsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  DashboardRoute: DashboardRouteWithChildren,
  PricingRoute: PricingRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
